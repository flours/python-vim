[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = "neoclide/coc.nvim"
merge = 0
rev = "release"
hook_add = """
source ~/.config/nvim/plugins/coc.rc.vim
"""

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
"imap <C-k>     <Plug>(neosnippet_expand_or_jump)
"smap <C-k>     <Plug>(neosnippet_expand_or_jump)
"xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
 \ pumvisible() ? "\<C-n>" :
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

imap <expr><CR>
\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"


smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
"if has('conceal')
"  set conceallevel=2 concealcursor=niv
"endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'


[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = '~/ac'
hook_add="""
nmap <space>l <cmd>Login<cr>
nmap <space>u <cmd>Setuser<cr>
nmap <space>p <cmd>Setpass<cr>
nmap <space>c <cmd>Setcontest<cr>
nmap <space>ta <cmd>Test a<cr>
nmap <space>tb <cmd>Test b<cr>
nmap <space>tc <cmd>Test c<cr>
nmap <space>td <cmd>Test d<cr>
nmap <space>te <cmd>Test e<cr>
nmap <space>tf <cmd>Test f<cr>
nmap <space>tg <cmd>Test g<cr>
nmap <space>th <cmd>Test h<cr>
"""

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
-repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'ayu-theme/ayu-vim'
hook_add = """
set termguicolors
let ayucolor="dark"   " for dark version of theme
colorscheme ayu
"""

[[plugins]]
repo = "machakann/vim-highlightedyank"
hook_add = """
let g:highlightedyank_highlight_duration = 300
"""
